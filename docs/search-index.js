var searchIndex = new Map(JSON.parse('[["utils",{"t":"CCCCCCCCCHHHHHHHHGPPPNNHHHHNNNHHNNHHHNNNNNNPPGPGPPPPHHHNNNNHHHHHHNNNNNNNNHHHHHHHHHNNNNHNNNNNNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHSPIIPGNNHHHHNNNHHNNHNNNNN","n":["derivation","differential_equations","error_propagation","integration","interpolation","linear_systems","norms","root_search","utils","finite_difference_nth","newton_gregory_forward_derivative","newton_gregory_forward_derivative_error_estimate","richardson","compute_sig_position","cse_fork","cse_taylor","round_to_digits","QuadratureMethod","Simpson13","Simpson38","Trapezoidal","borrow","borrow_mut","composite_quadrature","composite_quadrature_simpson13_error","composite_quadrature_simpson38_error","composite_quadrature_trapezoidal_error","fmt","from","from_subset","gauss_legendre_table","gaussian_quadrature","into","is_in_subset","newton_cotes","newton_cotes_error","romberg","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","Exponential","Logarithmic","NonLinearRegressionType","Polynomial","SplineType","Type1","Type2","Type3","Type4","bezier","bezier_3d","bezier_mat","borrow","","borrow_mut","","bspline","bspline_3d","bspline_mat","collocation_polynomial_surface","divided_difference","finite_diff_table","from","","from_subset","","into","","is_in_subset","","lagrange","lagrange_basis_polynomial","lagrange_polynomial_error_range","linear_regression","newton_divided_difference","newton_gregory_forward","newton_gregory_forward_error","nonlinear_regression","spline","to_subset","","to_subset_unchecked","","tridiagonal_solve","try_from","","try_into","","type_id","","create_augmented","create_table_header","create_table_row","fixed_point_system","full_piv_lu","gauss_seidel_solver","is_diagonally_dominant","iterative_solve","jacobi_solver","ldu_decomposition","least_squares","lu_unpack","make_triangular","maximize_diagonal","newton_system","no_piv_lu","no_piv_lu_packed","no_piv_lu_packed_mut","partial_piv_lu","relaxation_solver","solve_cramer","solve_gauss","solve_lu","solve_triangular","condition_number","norm_mat","norm_vec","x_error_bound_a","x_error_range_b","bissection","fixed_point","get_bissection_iterations","get_fixed_point_iterations_mvt","get_fixed_point_x_tolerance_fit","linear_interpolation","newton","secant","EPSILON","EmptyTable","FuncMulti","FuncSingle","HeaderRowsLengthMismatch","TableError","borrow","borrow_mut","choose_float","compute_derivative","compute_gradient","factorial","fmt","from","from_subset","function_vec","gradient_mat","into","is_in_subset","table_formatter","to_subset","to_subset_unchecked","try_from","try_into","type_id"],"q":[[0,"utils"],[9,"utils::derivation"],[13,"utils::error_propagation"],[17,"utils::integration"],[43,"utils::interpolation"],[93,"utils::linear_systems"],[117,"utils::norms"],[122,"utils::root_search"],[130,"utils::utils"],[155,"core::result"],[156,"alloc::vec"],[157,"core::fmt"],[158,"alloc::string"],[159,"core::option"],[160,"core::any"],[161,"nalgebra::base::alias"],[162,"core::convert"]],"i":"``````````````````An0000````000``00```000000Bl0`0`Bn000```0101``````01010101`````````0101`010101``````````````````````````````````````Cf``0`00````000``00`00000","f":"`````````{{bddf}{{l{d{j{h}}}}}}{{nnd{j{{A`{d}}}}{j{{A`{d}}}}}{{l{d{j{h}}}}}}{{n{j{{A`{d}}}}dnb}{{l{{Ab{dd}}{j{h}}}}}}{{bddnfAd}{{l{{Af{{Af{d}}}}{j{h}}}}}}{dAh}{{Aj{j{{A`{d}}}}{j{{A`{d}}}}}d}0{{dAh}d}````{j{{j{c}}}{}}{{{j{Al}}}{{j{Alc}}}{}}{{bd{Ab{dd}}An}{{l{d{j{h}}}}}}{{}B`}0{{dd{Ab{dd}}d}{{l{d{j{h}}}}}}{{{j{An}}{j{AlBb}}}Bd}{cc{}}{{{j{c}}}e{}{}}{n{{l{{Ab{{Af{d}}{Af{d}}}}{j{h}}}}}}{{bn{Ab{dd}}}{{l{d{j{h}}}}}}{{}c{}}{jAd}{{n{j{{A`{d}}}}{j{{A`{d}}}}{Ab{nn}}}{{l{d{j{h}}}}}}9{{bd{Ab{dd}}n}{{l{{Af{{Af{d}}}}{j{h}}}}}}{jBf}{j{{Bh{c}}}{}}{jc{}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{jBj}`````````{{}B`}00{j{{j{c}}}{}}0{{{j{Al}}}{{j{Alc}}}{}}022222{{n{j{{A`{d}}}}}{{l{{Af{{Af{d}}}}{j{h}}}}}}{cc{}}0{{{j{c}}}e{}{}}0??>>{{nd{j{{A`{d}}}}{j{{A`{d}}}}}{{l{d{j{h}}}}}}{{nnd{j{{A`{d}}}}}{{l{d{j{h}}}}}}{{nbd{j{{A`{d}}}}}{{l{{Ab{dd}}{j{h}}}}}}88{{ndd{j{{A`{d}}}}{j{{A`{d}}}}Ad}{{l{d{j{h}}}}}}{{}{{l{d{j{h}}}}}}{BlB`}{{{j{{A`{d}}}}{j{{A`{d}}}}Bn}B`}{j{{Bh{c}}}{}}0{jc{}}0>{c{{l{e}}}{}{}}0{{}{{l{c}}}{}}0{jBj}0{{{j{{C`{d}}}}{j{{Cb{d}}}}}{{C`{d}}}}{{{j{h}}n{j{h}}}{{Af{Bf}}}}{{n{j{{Cb{d}}}}d}{{Af{Bf}}}}{{{j{{A`{Aj}}}}{j{{Cb{d}}}}ddn}{{l{{Cb{d}}{j{h}}}}}}{{{j{{C`{d}}}}{j{{Cb{d}}}}}{{l{{Cb{d}}{j{h}}}}}}{{{j{{C`{d}}}}{j{{Cb{d}}}}dn}{{l{{Cb{d}}{j{h}}}}}}{{{j{{C`{d}}}}}Ad}{{{j{{C`{d}}}}{j{{C`{d}}}}{j{{Cb{d}}}}n}{{Cb{d}}}}2{{{j{{C`{d}}}}Ad}{{Ab{{C`{d}}{C`{d}}{C`{d}}}}}}4{{{j{{C`{d}}}}}{{Ab{{C`{d}}{C`{d}}}}}}{{{j{{C`{d}}}}{j{{Cb{d}}}}Ad}{{l{{Ab{{C`{d}}{Cb{d}}}}{j{h}}}}}}17{{{j{{C`{d}}}}}{{l{{Ab{{C`{d}}{C`{d}}}}{j{h}}}}}}{{{j{{C`{d}}}}}{{l{{C`{d}}{j{h}}}}}}{{{j{Al{C`{d}}}}}{{l{B`{j{h}}}}}}9{{{j{{C`{d}}}}{j{{Cb{d}}}}ddn}{{l{{Cb{d}}{j{h}}}}}}:{{{j{{C`{d}}}}{j{{Cb{d}}}}Ad}{{l{{Cb{d}}{j{h}}}}}}{{{j{{C`{d}}}}{j{{C`{d}}}}{j{{Cb{d}}}}}{{Cb{d}}}}{{{j{{C`{d}}}}{j{{Cb{d}}}}Ad}{{Cb{d}}}}{{{j{{C`{d}}}}Cd}{{l{d{j{h}}}}}}{{{j{{C`{d}}}}Cd}d}{{{j{{Cb{d}}}}Cd}d}{{{j{{C`{d}}}}{j{{C`{d}}}}Cd}{{l{d{j{h}}}}}}{{{j{{C`{d}}}}{j{{Cb{d}}}}{j{{Cb{d}}}}Cd}{{l{{Ab{dd}}{j{h}}}}}}{{b{Ab{dd}}ddn}{{l{d{j{h}}}}}}{{bdddn}{{l{d{j{h}}}}}}{{{Ab{dd}}d}{{l{n{j{h}}}}}}{{bb{Ab{dd}}d}{{l{n{j{h}}}}}}{{bb{Ab{dd}}d}{{l{d{j{h}}}}}}434{{}d}`````{j{{j{c}}}{}}{{{j{Al}}}{{j{Alc}}}{}}{{df}{{l{d{j{h}}}}}}{{bd}d}{{Aj{j{{A`{d}}}}}{{Af{d}}}}{f{{l{d{j{h}}}}}}{{{j{Cf}}{j{AlBb}}}Bd}{cc{}}{{{j{c}}}e{}{}}{{{j{{A`{Aj}}}}{j{{A`{d}}}}}{{Cb{d}}}}{{{j{{A`{Aj}}}}{j{{A`{d}}}}}{{C`{d}}}}{{}c{}}{jAd}{{{Af{Bf}}{Af{Bf}}{Af{{Af{c}}}}}{{l{BfCf}}}{{Ch{Bf}}}}{j{{Bh{c}}}{}}{jc{}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{jBj}","D":"Ij","p":[[8,"FuncSingle",130],[1,"f64"],[1,"u8"],[1,"str"],[1,"reference",null,null,1],[6,"Result",155,null,1],[1,"usize"],[1,"slice"],[1,"tuple",null,null,1],[1,"bool"],[5,"Vec",156],[1,"i32"],[8,"FuncMulti",130],[0,"mut"],[6,"QuadratureMethod",17],[1,"unit"],[5,"Formatter",157],[8,"Result",157],[5,"String",158],[6,"Option",159,null,1],[5,"TypeId",160],[6,"NonLinearRegressionType",43],[6,"SplineType",43],[8,"DMatrix",161],[8,"DVector",161],[1,"u32"],[6,"TableError",130],[10,"Into",162,null,1]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE4AFAAAAAkAEgAFABkAAQAcAAAAHgAAACIAAAAkAAAAJgAaAEQAAQBIAAEATgAAAFAAAABSAAsAhAAAAIcAAACJAAEAjwAAAJEAAACVAAAAlwAEAA==","P":[[21,"T"],[23,""],[28,"T"],[29,"SS,SP"],[30,""],[32,"U"],[33,""],[38,"SS"],[40,"U,T"],[41,"U"],[42,""],[55,"T"],[59,""],[65,"T"],[67,"SS,SP"],[69,"U"],[71,""],[82,"SS"],[86,""],[87,"U,T"],[89,"U"],[91,""],[136,"T"],[138,""],[143,"T"],[144,"SS,SP"],[145,""],[147,"U"],[148,""],[149,"T"],[150,"SS"],[152,"U,T"],[153,"U"],[154,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[6605]}